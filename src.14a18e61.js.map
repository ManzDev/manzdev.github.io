{"version":3,"sources":["../src/index.js","assets/demos.json","index.js"],"names":["const","module","exports","title","description","image","links","Codepen","Tutorial","Codelapse","Twitter","Codevember","data","forEach","element","section","document","createElement","info","className","h2","textContent","p","innerHTML","a","link","href","Object","values","keys","appendChild","preview","img","src","assets","replace","alt","body"],"mappings":";AA0GC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1GDA,IAAM,EAAO,CACP,GAAA,CAAC,OAAO,SACb,EAAI,CAAC,WAAW,aACT,KAAA,CAAC,UACF,IAAA,CAAC,UACF,IAAA,CAAC,WAMP,SAAS,EAAQ,GACT,OAAA,EAAI,QAAQ,OAAO,KAAK,EAAI,MAAM,aAAe,IAAI,GAAI,MAAO,IAMxE,SAAS,EAAW,GACZ,OAAC,EAAI,IAAI,QAAQ,KAAM,UAAU,QAAQ,KAAM,QAAQ,QAAQ,KAAM,QAI7E,SAAwB,EAAM,GACzB,IAKH,EAAO,EAAM,EAAO,EAAO,EALxB,EAAY,iVACf,EAAU,GACV,EAAM,GACN,EAAO,EACP,EAAQ,GAGA,SAAA,EAAI,GACR,IAAA,EAAO,EAAK,EAAM,QAAQ,MAAM,KAAK,IAAM,IAC9C,EAAM,EAAQ,EAAQ,OAAO,IAAI,EAC9B,OAAC,EACA,EAAK,IACV,EAAQ,EAAI,MAAM,QAAQ,GACnB,EAAS,EAAJ,IAFS,EAAK,GADR,EAMV,SAAA,IAED,IADH,IAAA,EAAM,GACH,EAAQ,QAAQ,GAAO,EAAI,EAAQ,EAAQ,OAAO,IAClD,OAAA,EAQC,IALT,EAAK,EAAG,QAAQ,wBAAyB,SAAC,EAAG,EAAM,GAE3C,OADP,EAAM,EAAK,eAAiB,EACrB,KACL,QAAQ,aAAc,IAEhB,EAAM,EAAU,KAAK,IAC7B,EAAO,EAAG,UAAU,EAAM,EAAM,OAChC,EAAO,EAAU,UACjB,EAAQ,EAAM,GACV,EAAK,MAAM,qBAIN,EAAM,IAAM,EAAM,GAC1B,EAAQ,qBAAqB,EAAM,GAAG,SAAS,EAAM,GAAG,eAAe,KAAK,EAAQ,EAAW,EAAM,IAAM,EAAM,IAAI,QAAQ,aAAc,KAAK,SAGxI,EAAM,KACd,EAAI,EAAM,IACJ,MAAM,QACX,EAAM,GAAK,EAAM,GAAG,QAAQ,SAAU,KAEvC,EAAQ,EAAM,EAAQ,EAAM,GAAG,QAAQ,gBAAiB,MAChD,MAAJ,EAAS,EAAI,cAEhB,EAAI,EAAE,MAAM,MAAQ,KAAO,KAC3B,EAAQ,EAAM,QAAQ,gBAAiB,gBAExC,EAAQ,IAAI,EAAE,IAAM,EAAQ,KAAK,EAAE,KAG3B,EAAM,GACd,EAAQ,aAAa,EAAW,EAAM,IAAG,UAAU,EAAW,EAAM,IAAG,KAG/D,EAAM,KACd,EAAM,EAAI,QAAQ,MAAO,YAAY,EAAW,EAAM,KAAO,EAAM,EAAK,gBAAe,MACvF,EAAQ,IAAU,QAEV,EAAM,GACd,EAAQ,MAGA,EAAM,KAAO,EAAM,IAE3B,EAAQ,KADR,EAAI,KAAO,EAAM,IAAM,EAAM,IAAI,OAAyB,MAAf,EAAM,IAAI,GAAS,EAAE,IAClD,IAAM,EAAM,EAAM,KAAO,EAAM,KAAO,KAAK,EAAE,IAGnD,EAAM,IACd,EAAQ,SAAS,EAAW,EAAM,KAAK,WAG/B,EAAM,KAAO,EAAM,MAC3B,EAAQ,EAAI,EAAM,KAAO,QAE1B,GAAO,EACP,GAAO,EAGD,OAAC,EAAM,EAAG,UAAU,GAAQ,KAAS,OAC5C,IAAA,EAAA,EAAA,QAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GDC,OAAOC,QAAQ,CAAC,CAACC,MAAM,0BAA0BC,YAAY,qHAAqHC,MAAM,oBAAoBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACC,SAAS,6EAA6E,CAACL,MAAM,6BAA6BC,YAAY,kIAAkIC,MAAM,uBAAuBC,MAAM,CAAC,CAACG,UAAU,sDAAsD,CAACF,QAAQ,wCAAwC,CAACJ,MAAM,uBAAuBC,YAAY,4JAA4JC,MAAM,2BAA2BC,MAAM,CAAC,CAACC,QAAQ,uCAAuC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,WAAWC,YAAY,wKAAwKC,MAAM,eAAeC,MAAM,CAAC,CAACC,QAAQ,uCAAuC,CAACG,QAAQ,wDAAwD,CAACP,MAAM,gBAAgBC,YAAY,0NAA0NC,MAAM,oBAAoBC,MAAM,CAAC,CAACC,QAAQ,wCAAwC,CAACJ,MAAM,SAASC,YAAY,+IAA+IC,MAAM,wBAAwBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,wDAAwD,CAACP,MAAM,OAAOC,YAAY,8GAA8GC,MAAM,sBAAsBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,sDAAsD,CAACC,WAAW,+CAA+C,CAACR,MAAM,OAAOC,YAAY,+GAA+GC,MAAM,sBAAsBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,sDAAsD,CAACC,WAAW,+CAA+C,CAACR,MAAM,yBAAyBC,YAAY,2FAA2FC,MAAM,yBAAyBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,sDAAsD,CAACF,SAAS,iFAAiF,CAACG,WAAW,+CAA+C,CAACR,MAAM,eAAeC,YAAY,wHAAwHC,MAAM,qBAAqBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,uDAAuD,CAACC,WAAW,+CAA+C,CAACR,MAAM,sBAAsBC,YAAY,+HAA+HC,MAAM,8BAA8BC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,6BAA6BC,YAAY,8IAA8IC,MAAM,uBAAuBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,aAAaC,YAAY,0IAA0IC,MAAM,uBAAuBC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,oCAAoCC,YAAY,gIAAgIC,MAAM,oCAAoCC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,sDAAsD,CAACC,WAAW,+CAA+C,CAACR,MAAM,8BAA8BC,YAAY,0JAA0JC,MAAM,kCAAkCC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,sDAAsD,CAACC,WAAW,+CAA+C,CAACR,MAAM,gBAAgBC,YAAY,mGAAmGC,MAAM,0BAA0BC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,mBAAmBC,YAAY,kJAAkJC,MAAM,cAAcC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ,yDAAyD,CAACP,MAAM,qBAAqBC,YAAY,gIAAgIC,MAAM,eAAeC,MAAM,CAAC,CAACC,QAAQ,sCAAsC,CAACG,QAAQ;;ACI3gM,aAJA,IAAA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,wBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAAE,EAAKC,QAAAA,QAAQ,SAAAC,GACLC,IAAAA,EAAUC,SAASC,cAAc,WACjCC,EAAOF,SAASC,cAAc,OACpCC,EAAKC,UAAY,OAEXC,IAAAA,EAAKJ,SAASC,cAAc,MAClCG,EAAGC,YAAcP,EAAQX,MACnBmB,IAAAA,EAAIN,SAASC,cAAc,KACjCK,EAAEC,WAAY,EAAUT,EAAAA,SAAAA,EAAQV,aAC1BE,IAAAA,EAAQU,SAASC,cAAc,KACrCX,EAAMa,UAAY,QAClBL,EAAQR,MAAMO,QAAQ,SAAAW,GACdC,IAAAA,EAAOT,SAASC,cAAc,KACpCQ,EAAKC,KAAOC,OAAOC,OAAOJ,GAAG,GAC7BC,EAAKJ,YAAcM,OAAOE,KAAKL,GAAG,GAClClB,EAAMwB,YAAYL,KAEpBP,EAAKY,YAAYV,GACjBF,EAAKY,YAAYR,GACjBJ,EAAKY,YAAYxB,GAEXyB,IAAAA,EAAUf,SAASC,cAAc,OACvCc,EAAQZ,UAAY,UACda,IAAAA,EAAMhB,SAASC,cAAc,OACnCe,EAAIC,IAAMC,EAAOpB,QAAAA,EAAQT,MAAM8B,QAAQ,OAAQ,KAC/CH,EAAII,IAAMtB,EAAQX,MAClB4B,EAAQD,YAAYE,GAEpBjB,EAAQe,YAAYZ,GACpBH,EAAQe,YAAYC,GACpBf,SAASqB,KAAKP,YAAYf","file":"src.14a18e61.js","sourceRoot":"..\\src","sourcesContent":["const TAGS = {\n\t'' : ['<em>','</em>'],\n\t_ : ['<strong>','</strong>'],\n\t'\\n' : ['<br />'],\n\t' ' : ['<br />'],\n\t'-': ['<hr />']\n};\n\n/** Outdent a string based on the first indented line's leading whitespace\n *\t@private\n */\nfunction outdent(str) {\n\treturn str.replace(RegExp('^'+(str.match(/^(\\t| )+/) || '')[0], 'gm'), '');\n}\n\n/** Encode special attribute characters to HTML entities in a String.\n *\t@private\n */\nfunction encodeAttr(str) {\n\treturn (str+'').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\n/** Parse Markdown into an HTML String. */\nexport default function parse(md) {\n\tlet tokenizer = /((?:^|\\n+)(?:\\n---+|\\* \\*(?: \\*)+)\\n)|(?:^```(\\w*)\\n([\\s\\S]*?)\\n```$)|((?:(?:^|\\n+)(?:\\t|  {2,}).+)+\\n*)|((?:(?:^|\\n)([>*+-]|\\d+\\.)\\s+.*)+)|(?:\\!\\[([^\\]]*?)\\]\\(([^\\)]+?)\\))|(\\[)|(\\](?:\\(([^\\)]+?)\\))?)|(?:(?:^|\\n+)([^\\s].*)\\n(\\-{3,}|={3,})(?:\\n+|$))|(?:(?:^|\\n+)(#{1,3})\\s*(.+)(?:\\n+|$))|(?:`([^`].*?)`)|(  \\n\\n*|\\n{2,}|__|\\*\\*|[_*])/gm,\n\t\tcontext = [],\n\t\tout = '',\n\t\tlast = 0,\n\t\tlinks = {},\n\t\tchunk, prev, token, inner, t;\n\n\tfunction tag(token) {\n\t\tvar desc = TAGS[token.replace(/\\*/g,'_')[1] || ''],\n\t\t\tend = context[context.length-1]==token;\n\t\tif (!desc) return token;\n\t\tif (!desc[1]) return desc[0];\n\t\tcontext[end?'pop':'push'](token);\n\t\treturn desc[end|0];\n\t}\n\n\tfunction flush() {\n\t\tlet str = '';\n\t\twhile (context.length) str += tag(context[context.length-1]);\n\t\treturn str;\n\t}\n\n\tmd = md.replace(/^\\[(.+?)\\]:\\s*(.+)$/gm, (s, name, url) => {\n\t\tlinks[name.toLowerCase()] = url;\n\t\treturn '';\n\t}).replace(/^\\n+|\\n+$/g, '');\n\n\twhile ( (token=tokenizer.exec(md)) ) {\n\t\tprev = md.substring(last, token.index);\n\t\tlast = tokenizer.lastIndex;\n\t\tchunk = token[0];\n\t\tif (prev.match(/[^\\\\](\\\\\\\\)*\\\\$/)) {\n\t\t\t// escaped\n\t\t}\n\t\t// Code/Indent blocks:\n\t\telse if (token[3] || token[4]) {\n\t\t\tchunk = '<pre class=\"code '+(token[4]?'poetry':token[2].toLowerCase())+'\">'+outdent(encodeAttr(token[3] || token[4]).replace(/^\\n+|\\n+$/g, ''))+'</pre>';\n\t\t}\n\t\t// > Quotes, -* lists:\n\t\telse if (token[6]) {\n\t\t\tt = token[6];\n\t\t\tif (t.match(/\\./)) {\n\t\t\t\ttoken[5] = token[5].replace(/^\\d+/gm, '');\n\t\t\t}\n\t\t\tinner = parse(outdent(token[5].replace(/^\\s*[>*+.-]/gm, '')));\n\t\t\tif (t==='>') t = 'blockquote';\n\t\t\telse {\n\t\t\t\tt = t.match(/\\./) ? 'ol' : 'ul';\n\t\t\t\tinner = inner.replace(/^(.*)(\\n|$)/gm, '<li>$1</li>');\n\t\t\t}\n\t\t\tchunk = '<'+t+'>' + inner + '</'+t+'>';\n\t\t}\n\t\t// Images:\n\t\telse if (token[8]) {\n\t\t\tchunk = `<img src=\"${encodeAttr(token[8])}\" alt=\"${encodeAttr(token[7])}\">`;\n\t\t}\n\t\t// Links:\n\t\telse if (token[10]) {\n\t\t\tout = out.replace('<a>', `<a href=\"${encodeAttr(token[11] || links[prev.toLowerCase()])}\">`);\n\t\t\tchunk = flush() + '</a>';\n\t\t}\n\t\telse if (token[9]) {\n\t\t\tchunk = '<a>';\n\t\t}\n\t\t// Headings:\n\t\telse if (token[12] || token[14]) {\n\t\t\tt = 'h' + (token[14] ? token[14].length : (token[13][0]==='='?1:2));\n\t\t\tchunk = '<'+t+'>' + parse(token[12] || token[15]) + '</'+t+'>';\n\t\t}\n\t\t// `code`:\n\t\telse if (token[16]) {\n\t\t\tchunk = '<code>'+encodeAttr(token[16])+'</code>';\n\t\t}\n\t\t// Inline formatting: *em*, **strong** & friends\n\t\telse if (token[17] || token[1]) {\n\t\t\tchunk = tag(token[17] || '--');\n\t\t}\n\t\tout += prev;\n\t\tout += chunk;\n\t}\n\n\treturn (out + md.substring(last) + flush()).trim();\n}\n","module.exports=[{title:\"Monkey Island animation\",description:\"*Guybrush ThreepWood* walking from *Monkey Island* game scene. Uses `CSS animations`, `steps()` and `HTML5 audio`.\",image:\"monkey-island.png\",links:[{Codepen:\"https://codepen.io/manz/pen/wBZvoE\"},{Tutorial:\"https://www.emezeta.com/articulos/animar-personajes-con-animaciones-css\"}]},{title:\"Awesome Mix Vol.1 Cassette\",description:'Hooked on a Feeling? Audio Cassette *\"Awesome Mix Vol. 1\"* with only CSS (without images) from *Guardians of the Galaxy* movie.',image:\"awesome-mix-vol1.png\",links:[{Codelapse:\"https://twitter.com/Manz/status/701110430593392641\"},{Codepen:\"https://codepen.io/manz/pen/VeJwOr\"}]},{title:\"HTML5 Periodic Table\",description:\"A *HTML5 elements periodic table* grouped by type (metadata, text tags, multimedia, forms, etc...) and link to more info (spanish). Created with `VueJS`.\",image:\"html5-periodic-table.png\",links:[{Codepen:\"https://codepen.io/manz/full/maVXvv\"},{Twitter:\"https://twitter.com/Manz/status/1096374406983626752\"}]},{title:\"Stargate\",description:\"*Stargate Simulator* with HTML/CSS/JS, `SVG` and `HTML5 Audio`. Press some *chevrons* and fail call (timeout: 20sec) and press *9 chevrons* and call to other galaxy!\",image:\"stargate.png\",links:[{Codepen:\"https://codepen.io/manz/full/zoREJL\"},{Twitter:\"https://twitter.com/Manz/status/857227020111155200\"}]},{title:\"Dragon Ball Z\",description:\"Small interactive *Goku* demo from *Dragon Ball Z* for control keyboard events. Uses `HTML5 audio`, `keyboard events`, `CSS sprites` & `classList`. This example run better in `canvas` Javascript. Only demo purposes.\",image:\"dragon-ball-z.png\",links:[{Codepen:\"https://codepen.io/manz/pen/RpNyER\"}]},{title:\"Galaxy\",description:\"A *pixel* Death Star surfing into a far, far `canvas` star space away. Uses `HTML5 audio`, `canvas` and a pixel image created with `Piskel`.\",image:\"galaxy-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/KypYmz\"},{Twitter:\"https://twitter.com/Manz/status/925829802975776769\"}]},{title:\"Rock\",description:\"A *pixel* rock playing music. Uses `CSS animations` and `Howler`. Images created with `Piskel`. *Du Hast!!*\",image:\"rock-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/LOzVrM\"},{Twitter:\"https://twitter.com/Manz/status/930895667593084928\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"Tron\",description:\"A *Tron* movie `canvas` for cycle bike animation. Uses `Howler`, `CSS perspective` over Javascript `canvas`.\",image:\"tron-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/NwjPJd\"},{Twitter:\"https://twitter.com/Manz/status/929494229990232065\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"A Codepen in a Codepen\",description:\"A *Codepen* guy dancing with *Toby Fox's Undertale* music. Look mom! Without Javascript!\",image:\"codepen-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/jxGEmw\"},{Twitter:\"https://twitter.com/Manz/status/993831030359580672\"},{Tutorial:\"https://www.emezeta.com/articulos/tutorial-css-como-crear-un-objeto-que-baile\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"Sky... Moon?\",description:\"When the night comes... Moon appears? A mysterious demo that use `media queries` for *1:1* scene, `Howler` and `SVG`.\",image:\"sky-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/qQNdNv\"},{Twitter:\"https://twitter.com/Manz/status/1060860535565152256\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"Knight Rider (Kitt)\",description:\"*Hi, Michael. Press Pursuit to activate!* A **Knight Rider** panel demo, with talk simulation. Uses `CSS Grid` and `Howler`.\",image:\"knight-rider-kitt-jsday.png\",links:[{Codepen:\"https://codepen.io/manz/pen/wQgRYE\"},{Twitter:\"https://twitter.com/Manz/status/1062433291071115268\"}]},{title:\"Super Mario Bros Cartridge\",description:\"A *Super Mario Bros.* NES cartridge. Created with images, and layout composited with only CSS, using `transform`, `flexbox` and `position`.\",image:\"mario-bros-jsday.png\",links:[{Codepen:\"https://codepen.io/manz/pen/RqKvMq\"},{Twitter:\"https://twitter.com/Manz/status/1062441256968691714\"}]},{title:\"Pink Floyd\",description:\"*Time* from *Pink Floyd*. Design created with only CSS and `SVG` for triangle. Uses `Howler` from music and `PostCSS` for some plugins.\",image:\"pink-floyd-jsday.png\",links:[{Codepen:\"https://codepen.io/manz/pen/GwrYLb\"},{Twitter:\"https://twitter.com/Manz/status/1062419011223384064\"}]},{title:\"Opera turret song (Portal 2 Game)\",description:\"A ending scene from *Portal 2 Game* known as *Opera Turret Song*. Uses `SVG` for turrets, `HTML5 audio` and `CSS animations`.\",image:\"turret-song-portal-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/MOXWZy\"},{Twitter:\"https://twitter.com/Manz/status/978395358278557697\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"Super Mario Kart Codevember\",description:\"A ending demo for *Codevember 2017*. A ending race from *Super Mario Kart* game from *Super Nintendo*. Includes three best demos created on Codevember.\",image:\"super-mario-kart-codevember.png\",links:[{Codepen:\"https://codepen.io/manz/pen/KyBWvV\"},{Twitter:\"https://twitter.com/Manz/status/936367152852013056\"},{Codevember:\"https://github.com/ManzDev/codevember2017\"}]},{title:\"Star Wars VHS\",description:\"A *VHS* cassette simulator with *Star Wars* movie. Uses `Howler`, `canvas` and `CSS animations`.\",image:\"star-wars-vhs-jsday.png\",links:[{Codepen:\"https://codepen.io/manz/pen/XypOdj\"},{Twitter:\"https://twitter.com/Manz/status/1062645956988923906\"}]},{title:\"Nintendo GameBoy\",description:\"A *Nintendo GameBoy* console created with only CSS.<br>Can you turn on GameBoy? Uses `HTML5 audio`, `CSS animations`, `Flexbox` and `CSS Grid`.\",image:\"gameboy.png\",links:[{Codepen:\"https://codepen.io/manz/pen/XQYoKd\"},{Twitter:\"https://twitter.com/Manz/status/1120050634596728833\"}]},{title:\"Microsoft ScanDisk\",description:\"A old-school *Microsoft ScanDisk* simulation for check your hard disk. Uses `Grid CSS` and ES6 Javascript for *surface scan*.\",image:\"scandisk.png\",links:[{Codepen:\"https://codepen.io/manz/pen/KLPEby\"},{Twitter:\"https://twitter.com/Manz/status/1124749875315380224\"}]}];","import snarkdown from 'snarkdown';\nimport assets from './assets/*.png';\nimport data from './assets/demos.json';\n\ndata.forEach(element => {\n  const section = document.createElement('section');\n  const info = document.createElement('div');\n  info.className = 'info';\n\n  const h2 = document.createElement('h2');\n  h2.textContent = element.title;\n  const p = document.createElement('p');\n  p.innerHTML = snarkdown(element.description);\n  const links = document.createElement('p');\n  links.className = 'links';\n  element.links.forEach(a => {\n    const link = document.createElement('a');\n    link.href = Object.values(a)[0];\n    link.textContent = Object.keys(a)[0];\n    links.appendChild(link);\n  });\n  info.appendChild(h2);\n  info.appendChild(p);\n  info.appendChild(links);\n\n  const preview = document.createElement('div');\n  preview.className = 'preview';\n  const img = document.createElement('img');\n  img.src = assets[element.image.replace('.png', '')];\n  img.alt = element.title;\n  preview.appendChild(img);\n\n  section.appendChild(info);\n  section.appendChild(preview);\n  document.body.appendChild(section);\n});\n"]}